{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7931f723d01d190693ca04dafe3231ceea2fe48f99d2c691222cf112328e33a3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "820627",
    "logsBloom": "0x
    "blockHash": "0xaf3426d4d0be7d29af8670efe2af29e364774b6a165a0cce33ffbf1f8277afac",
    "transactionHash": "0x7931f723d01d190693ca04dafe3231ceea2fe48f99d2c691222cf112328e33a3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "820627",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0a465ff2bb1a9522db25bb158cbf58fc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Moheet Shendarkar\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"Ac ontract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title Ac ontract for crowd funding\\n * @author Moheet Shendarkar\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 10 * 1e18; // optimized\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner; // optimized\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner(); // new\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n\\n    function fund() public payable {\\n\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        ); // 1e18 = 10^18 wei = 1 eth\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n        // reverting message returns the extra gas required for computation\\n    }\\n\\n    function withDraw() public onlyOwner {\\n        //set mapping to zero\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funderAddress = s_funders[funderIndex];\\n            s_addressToAmountFunded[funderAddress] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    // function cheaperWithDraw() public payable onlyOwner {\\n    //     address[] memory funders = s_funders;\\n    //     // mapping cant be in memory\\n    //     for(uint256 funderIndex=0;funderIndex<funders.length;funderIndex++) {\\n    //         address funder = funders[funderIndex];\\n    //         s_addressToAmountFunded[funder] = 0;\\n    //     }\\n    //     s_funders = new address[](0);\\n    //     (bool success,) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    //     require(success);\\n    // }\\n}\\n\",\"keccak256\":\"0xe281f0a575d59c01596026baab8e4a44c3a9918f321a7a643fce0ed4d9be2d01\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        return uint256(price * 1e10);\\n    }\\n    \\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e10;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x734f5b8a51134912d02225da8049c22538b76bdc5a0a96e0813954a5f9116780\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ed4380380610ed483398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d7561015f600039600081816101dc015261042a0152610d756000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780630fdb1c10146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107bb565b610191565b6040516100a99190610801565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b005b3480156100d557600080fd5b506100de61041a565b6040516100eb9190610801565b60405180910390f35b34801561010057600080fd5b50610109610426565b604051610116919061082b565b60405180910390f35b34801561012b57600080fd5b5061013461044e565b60405161014191906108a5565b60405180910390f35b610152610478565b005b34801561016057600080fd5b5061017b600480360381019061017691906108ec565b6105a0565b604051610188919061082b565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561030a57600080828154811061028457610283610919565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030290610977565b915050610262565b50600067ffffffffffffffff811115610326576103256109bf565b5b6040519080825280602002602001820160405280156103545781602001602082028036833780820191505090505b506000908051906020019061036a9291906106b1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039190610a1f565b60006040518083038185875af1925050503d80600081146103ce576040519150601f19603f3d011682016040523d82523d6000602084013e6103d3565b606091505b5050905080610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610a91565b60405180910390fd5b50565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b678ac7230489e800006104b6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e790919063ffffffff16565b10156104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90610afd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008082815481106105b5576105b4610919565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105f383610620565b905060006402540be40085836106099190610b1d565b6106139190610b8e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610c4c565b5050509150506402540be400816106a99190610cc7565b915050919050565b82805482825590600052602060002090810192821561072a579160200282015b828111156107295782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106d1565b5b509050610737919061073b565b5090565b5b8082111561075457600081600090555060010161073c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107888261075d565b9050919050565b6107988161077d565b81146107a357600080fd5b50565b6000813590506107b58161078f565b92915050565b6000602082840312156107d1576107d0610758565b5b60006107df848285016107a6565b91505092915050565b6000819050919050565b6107fb816107e8565b82525050565b600060208201905061081660008301846107f2565b92915050565b6108258161077d565b82525050565b6000602082019050610840600083018461081c565b92915050565b6000819050919050565b600061086b6108666108618461075d565b610846565b61075d565b9050919050565b600061087d82610850565b9050919050565b600061088f82610872565b9050919050565b61089f81610884565b82525050565b60006020820190506108ba6000830184610896565b92915050565b6108c9816107e8565b81146108d457600080fd5b50565b6000813590506108e6816108c0565b92915050565b60006020828403121561090257610901610758565b5b6000610910848285016108d7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610982826107e8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109b4576109b3610948565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a096000836109ee565b9150610a14826109f9565b600082019050919050565b6000610a2a826109fc565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610a7b600c83610a34565b9150610a8682610a45565b602082019050919050565b60006020820190508181036000830152610aaa81610a6e565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ae7601b83610a34565b9150610af282610ab1565b602082019050919050565b60006020820190508181036000830152610b1681610ada565b9050919050565b6000610b28826107e8565b9150610b33836107e8565b9250828202610b41816107e8565b91508282048414831517610b5857610b57610948565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b99826107e8565b9150610ba4836107e8565b925082610bb457610bb3610b5f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bde81610bbf565b8114610be957600080fd5b50565b600081519050610bfb81610bd5565b92915050565b6000819050919050565b610c1481610c01565b8114610c1f57600080fd5b50565b600081519050610c3181610c0b565b92915050565b600081519050610c46816108c0565b92915050565b600080600080600060a08688031215610c6857610c67610758565b5b6000610c7688828901610bec565b9550506020610c8788828901610c22565b9450506040610c9888828901610c37565b9350506060610ca988828901610c37565b9250506080610cba88828901610bec565b9150509295509295909350565b6000610cd282610c01565b9150610cdd83610c01565b9250828202610ceb81610c01565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d2357610d22610948565b5b8282058414831517610d3857610d37610948565b5b509291505056fea26469706673582212208b2c6939cffae2c405d078d57538e5ab58c0d93e3018cb4b69c10635b5dc0e6864736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780630fdb1c10146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107bb565b610191565b6040516100a99190610801565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b005b3480156100d557600080fd5b506100de61041a565b6040516100eb9190610801565b60405180910390f35b34801561010057600080fd5b50610109610426565b604051610116919061082b565b60405180910390f35b34801561012b57600080fd5b5061013461044e565b60405161014191906108a5565b60405180910390f35b610152610478565b005b34801561016057600080fd5b5061017b600480360381019061017691906108ec565b6105a0565b604051610188919061082b565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561030a57600080828154811061028457610283610919565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030290610977565b915050610262565b50600067ffffffffffffffff811115610326576103256109bf565b5b6040519080825280602002602001820160405280156103545781602001602082028036833780820191505090505b506000908051906020019061036a9291906106b1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039190610a1f565b60006040518083038185875af1925050503d80600081146103ce576040519150601f19603f3d011682016040523d82523d6000602084013e6103d3565b606091505b5050905080610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610a91565b60405180910390fd5b50565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b678ac7230489e800006104b6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e790919063ffffffff16565b10156104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90610afd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008082815481106105b5576105b4610919565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806105f383610620565b905060006402540be40085836106099190610b1d565b6106139190610b8e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610c4c565b5050509150506402540be400816106a99190610cc7565b915050919050565b82805482825590600052602060002090810192821561072a579160200282015b828111156107295782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106d1565b5b509050610737919061073b565b5090565b5b8082111561075457600081600090555060010161073c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107888261075d565b9050919050565b6107988161077d565b81146107a357600080fd5b50565b6000813590506107b58161078f565b92915050565b6000602082840312156107d1576107d0610758565b5b60006107df848285016107a6565b91505092915050565b6000819050919050565b6107fb816107e8565b82525050565b600060208201905061081660008301846107f2565b92915050565b6108258161077d565b82525050565b6000602082019050610840600083018461081c565b92915050565b6000819050919050565b600061086b6108666108618461075d565b610846565b61075d565b9050919050565b600061087d82610850565b9050919050565b600061088f82610872565b9050919050565b61089f81610884565b82525050565b60006020820190506108ba6000830184610896565b92915050565b6108c9816107e8565b81146108d457600080fd5b50565b6000813590506108e6816108c0565b92915050565b60006020828403121561090257610901610758565b5b6000610910848285016108d7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610982826107e8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109b4576109b3610948565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a096000836109ee565b9150610a14826109f9565b600082019050919050565b6000610a2a826109fc565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610a7b600c83610a34565b9150610a8682610a45565b602082019050919050565b60006020820190508181036000830152610aaa81610a6e565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ae7601b83610a34565b9150610af282610ab1565b602082019050919050565b60006020820190508181036000830152610b1681610ada565b9050919050565b6000610b28826107e8565b9150610b33836107e8565b9250828202610b41816107e8565b91508282048414831517610b5857610b57610948565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b99826107e8565b9150610ba4836107e8565b925082610bb457610bb3610b5f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bde81610bbf565b8114610be957600080fd5b50565b600081519050610bfb81610bd5565b92915050565b6000819050919050565b610c1481610c01565b8114610c1f57600080fd5b50565b600081519050610c3181610c0b565b92915050565b600081519050610c46816108c0565b92915050565b600080600080600060a08688031215610c6857610c67610758565b5b6000610c7688828901610bec565b9550506020610c8788828901610c22565b9450506040610c9888828901610c37565b9350506060610ca988828901610c37565b9250506080610cba88828901610bec565b9150509295509295909350565b6000610cd282610c01565b9150610cdd83610c01565b9250828202610ceb81610c01565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d2357610d22610948565b5b8282058414831517610d3857610d37610948565b5b509291505056fea26469706673582212208b2c6939cffae2c405d078d57538e5ab58c0d93e3018cb4b69c10635b5dc0e6864736f6c63430008110033",
  "devdoc": {
    "author": "Moheet Shendarkar",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "Ac ontract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}